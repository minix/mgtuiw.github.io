---
layout: post
title: "一道算术题"
---

算术的题目是:

要做一个流量统计，需要统计出流量的阀值(以 MB 为单位).

下面是12天里每天的流量列表：

12 9 130 13 8 12 10 210 7 15 11 13

这些流量里，**130和210**是突发流量。怎么将突发的流量踢除并得到最高的阀值(在这里的阀值是15)

在www.ruby-china.org 得到了很多同学指点，提供了以下的思路：

>先计算所有元素的平均值 avg, 之后遍历数组，当某个元素远大于 avg 时，这个就是突发的流量了，这时候可以将其剔除</p>
<!--more-->

下面就是根据上面的思路写出的ruby代码，结果也是我想要的

```ruby
#!/usr/bin/env ruby

new_arr = [];
arr = [12, 9, 130, 13, 8, 12, 10, 210, 7, 15, 11, 13]
#得到数组的平均值(是为了能踢除突发的流量)
avg = arr.inject{ |sum, el| sum + el }.to_f / arr.size
#将突发流量踢除并将正常的数据放入新的数组里面
arr.map { |item| new_arr << item if item < avg }
#打印新数组里面的阈值
puts new_arr.max

```
